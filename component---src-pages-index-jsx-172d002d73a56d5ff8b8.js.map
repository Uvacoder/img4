{"version":3,"sources":["webpack:///./src/components/Post/index.jsx","webpack:///./src/pages/index.jsx"],"names":["Post","render","this","props","data","node","frontmatter","title","date","category","description","fields","slug","categorySlug","className","dateTime","moment","format","key","to","React","Component","IndexRoute","items","site","siteMetadata","subtitle","allMarkdownRemark","edges","forEach","post","push","name","content","pageQuery"],"mappings":"4LAKMA,G,4GACJC,OAAA,WAAU,IAAD,EAMHC,KAAKC,MAAMC,KAAKC,KAAKC,YAJvBC,EAFK,EAELA,MACAC,EAHK,EAGLA,KACAC,EAJK,EAILA,SACAC,EALK,EAKLA,YALK,EAOwBR,KAAKC,MAAMC,KAAKC,KAAKM,OAA5CC,EAPD,EAOCA,KAAMC,EAPP,EAOOA,aAEd,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,0BACEA,UAAU,kBACVC,SAAUC,IAAOR,GAAMS,OAAO,iBAE7BD,IAAOR,GAAMS,OAAO,cAEvB,0BAAMH,UAAU,uBAChB,0BAAMA,UAAU,sBAAsBI,IAAKL,GACzC,kBAAC,OAAD,CAAMM,GAAIN,EAAcC,UAAU,4BAC/BL,KAIP,wBAAIK,UAAU,eACZ,kBAAC,OAAD,CAAMA,UAAU,mBAAmBK,GAAIP,GACpCL,IAGL,uBAAGO,UAAU,qBAAqBJ,GAClC,kBAAC,OAAD,CAAMI,UAAU,iBAAiBK,GAAIP,GAArC,U,GAhCWQ,IAAMC,YAwCVrB,O,iLCtCTsB,E,kGACJrB,OAAA,WACE,IAAMsB,EAAQ,GADP,EAEqBrB,KAAKC,MAAMC,KAAKoB,KAAKC,aAAzClB,EAFD,EAECA,MAAOmB,EAFR,EAEQA,SAMf,OALcxB,KAAKC,MAAMC,KAAKuB,kBAAkBC,MAC1CC,SAAQ,SAAAC,GACZP,EAAMQ,KAAK,kBAAC,IAAD,CAAM3B,KAAM0B,EAAMZ,IAAKY,EAAKzB,KAAKM,OAAOC,WAInD,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,+BAAQL,GACR,0BAAMyB,KAAK,cAAcC,QAASP,KAEpC,kBAAC,IAAYxB,KAAKC,OAClB,yBAAKW,UAAU,WACb,yBAAKA,UAAU,kBAAkBS,O,GAlBpBH,IAAMC,WA0BhBC,YAER,IAAMY,EAAS","file":"component---src-pages-index-jsx-172d002d73a56d5ff8b8.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport './style.scss'\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n          >\n            {moment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <Link className=\"post__readmore\" to={slug}>\n          Read\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Post\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Post from '../components/Post'\nimport Sidebar from '../components/Sidebar'\n\nclass IndexRoute extends React.Component {\n  render() {\n    const items = []\n    const { title, subtitle } = this.props.data.site.siteMetadata\n    const posts = this.props.data.allMarkdownRemark.edges\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />)\n    })\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={subtitle} />\n          </Helmet>\n          <Sidebar {...this.props} />\n          <div className=\"content\">\n            <div className=\"content__inner\">{items}</div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexRoute\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          rss\n          vk\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}